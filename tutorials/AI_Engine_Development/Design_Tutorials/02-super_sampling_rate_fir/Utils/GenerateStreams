#!/usr/bin/env python3
# Copyright (C) 2023, Advanced Micro Devices, Inc. All rights reserved.
# SPDX-License-Identifier: X11
#


import os
import sys

from math import floor
from shutil import copyfile
from GenerationLib import *
from functools import partial

print("\n--------------------------------------------------\n")
print("Stream Content Generation\n")
print("--------------------------------------------------\n\n\n")

NArgs = len(sys.argv)
Args = sys.argv

# No argument
if (NArgs<2):
	print("\n================================================================================================\n")
	print("Usage:\nGenerateStreams DataType PLIO_Width NPhases NStreams NSamples NFrames SequenceType Basename")
	print("\tDatatype: cint16, int16, int32")
	print("\tPLIO_Width: 32, 64 or 128")
	print("\tNPhases: any integer >= 1")
	print("\tNStreams: 1 or 2")
	print("\tNSamples: integer, multiple of 8")
	print("\tNFrames: Any integer >= 1")
	print("\tSequenceType: Dirac, Linear, SinCos, Random")
	print("\tBasename: file name that will prepend phase and stream index")
	print("\n================================================================================================\n")
else:
	dtval = Args[1]
	pliow = int(Args[2])
	NPhases = int(Args[3])
	NStreams = int(Args[4])
	NSamples = int(Args[5])
	NFrames = int(Args[6])
	SeqType = Args[7]
	Basename = Args[8]

	GenerateTestVector(dtval,pliow,NPhases,NStreams,NSamples,NFrames,SeqType,Basename)

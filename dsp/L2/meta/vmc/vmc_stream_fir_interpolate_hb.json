{
  "schema": "aieip_spec_schema-0.1",
  "ip_name": "vmc_stream_fir_interpolate_hb",
  "block_info": {
    "label": "FIR Halfband Interpolator Stream",
    "description": "FIR Halfband Interpolator block for AI Engines. For a filter length of 'N', specify filter coefficients as a vector of '(N+1)/4+1' elements."
  },
  "parameters": [
    {
      "name": "data_type",
      "label": "Input/Output data type",
      "description": "The type of individual data samples input to and output of the filter function",
      "enum": [ "int16", "cint16", "int32", "cint32", "float", "cfloat" ],
      "default": "cint16",
      "type": "typename",
      "blockgui":{
            "tablabel": "Main",
            "parameterType":"popup"
      }
    },
    {
      "name": "coef_type",
      "label": "Filter coefficients type",
      "description": "The type of individual coefficients of the filter taps",
      "enum": [ "int16", "cint16", "int32", "cint32", "float", "cfloat" ],
      "default": "int16",
      "type": "typename",
      "validator": {
        "file": "vmc_stream_fir_interpolate_hb.py",
        "function": "vmc_validate_coef_type",
        "args": ["data_type"]
      },
      "blockgui":{
            "tablabel": "Main",
            "parameterType":"popup"
      }
    },
    {
      "name": "use_coeff_reload",
      "label": "Use runtime coefficient reloading",
      "description": "Allows the user to select of runtime coefficient reloading",
      "default": false,
      "type": "bool",
      "blockgui":{
            "tablabel": "Main",
            "parameterType":"checkbox",
            "disable":"coeff",
            "enable":"fir_length"
      }
    },
    {
      "name": "coeff",
      "label": "Filter coefficients",
      "description": "The FIR filter tap coefficients.",
      "element_type": "coef_type",
      "default": [ -2, 5, -9, 17, -30, 52, -98, 316, 500 ],
      "type": "vector",
      "validator": {
        "file": "vmc_stream_fir_interpolate_hb.py",
        "function": "vmc_validate_coeff",
        "args": ["use_coeff_reload", "coef_type" ,"fir_length", "data_type", "casc_length", "ssr", "interp_poly"]
      },
      "blockgui":{
            "tablabel": "Main",
            "parameterType":"edit"
      }
    },
    {
      "name": "fir_length",
      "label": "fir filter length",
      "description": "Specify fir length for coefficient reloading",
      "default": 31,
      "minimum": 4,
      "maximum": 8192,
      "type": "int",
      "blockgui":{
            "tablabel": "Main",
            "parameterType":"edit"
      }
    },
    {
      "name": "input_window_size",
      "label": "Input window size (Number of samples)",
      "description": "The number of samples in the window API used for input to the filter function. The number of samples in the output window will depend on the FIR filter parameters",
      "default": 256,
      "minimum": 4,
      "maximum": 8192,
      "type": "int",
      "validator": {
        "file": "vmc_stream_fir_interpolate_hb.py",
        "function": "vmc_validate_input_window_size",
        "args": ["data_type", "coef_type", "use_coeff_reload", "coeff", "fir_length", "ssr"]
      },
      "blockgui":{
            "tablabel": "Main",
            "parameterType":"edit"
      }
    },
    {
      "name": "shift_val",
      "label": "Scale output down by 2^",
      "description": "The power of 2 shift down applied to the accumulation of FIR before output",
      "default": 0,
      "maximum": 80,
      "minimum": 0,
      "type": "int",
	  "validator": {
        "file": "vmc_stream_fir_interpolate_hb.py",
        "function": "vmc_validate_shift_val",
        "args": ["data_type"]
      },
      "blockgui":{
            "tablabel": "Main",
            "parameterType":"edit"
      }
    },
    {
      "name": "rnd_mode",
      "label": "Rounding mode",
      "description": "The rounding to be applied during the shift down stage of processing.",
      "enum": [0, 1, 2, 3, 4, 5, 6, 7],
      "enum_str": ["Floor", "Ceiling", "Round to positive infinity", "Round to negative infinity", "Round symmetrical to infinity", "Round symmetrical to zero", "Round convergent to even", "Round convergent to odd"],
      "default": 2,
      "type": "int",
      "blockgui":{
            "tablabel": "Main",
            "parameterType":"popup"
      }
    },
    {
      "name": "ssr",
      "label": "Number of parallel input/output (SSR)",
      "description": "Specify number of data input/output in parallel for a single channel.",
      "default": 1,
      "minimum": 1,
      "type": "int",
      "blockgui":{
            "tablabel": "Main",
            "parameterType":"edit"
      }
    },
    {
      "name": "interp_poly",
      "label": "Interpolate polyphase",
      "description": "The number of parallel polyphases to combine.",
      "type": "int",
      "default": 1,
      "minimum": 1,
      "validator": {
        "file": "vmc_stream_fir_interpolate_hb.py",
        "function": "vmc_validate_interp_poly",
        "args": ["ssr"]
      },
      "blockgui":{
            "tablabel": "Main",
            "parameterType":"edit"
      }
    },
    {
      "name": "upshift_ct",
      "label": "Upshift unit center tap",
      "description": "Upshift unit center tap, uses provided center tap's value to upshift data sample",
      "default": 0,
      "type": "int",
      "validator": {
        "file": "vmc_stream_fir_interpolate_hb.py",
        "function": "vmc_validate_upshift_ct",
        "args": ["data_type"]
      },
      "blockgui":{
            "tablabel": "Main",
            "parameterType":"edit"
      }
    },
    {
      "name": "casc_length",
      "label": "Number of cascade stages",
      "description": "The length of cascaded kernels",
      "default": 1,
      "type": "int",
      "maximum": 40,
      "minimum": 1,
      "validator": {
        "file": "vmc_stream_fir_interpolate_hb.py",
        "function": "vmc_validate_casc_length",
        "args": ["use_coeff_reload", "fir_length"]
      },
      "blockgui":{
            "tablabel": "Main",
            "parameterType":"edit"
      }
    }
  ],
  "generator": {
    "file": "vmc_stream_fir_interpolate_hb.py",
    "function": "vmc_generate_graph"
  }
}
